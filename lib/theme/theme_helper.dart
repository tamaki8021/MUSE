// ignore_for_file: avoid_classes_with_only_static_members

// Flutter imports:
import 'package:flutter/material.dart';

// Project imports:
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  final _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  final Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors(),
  };

// A map of color schemes supported by the app
  final Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme,
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme
    //is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
        '$_appTheme is not found.Make sure you have added this theme class'
        'in JSON Try running flutter pub run build_runner',
      );
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found
    //or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
        '$_appTheme is not found.Make sure you have added this theme class '
        'in JSON Try running flutter pub run build_runner',
      );
    }
    //return theme from map

    final colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      dividerTheme: DividerThemeData(
        thickness: 24,
        space: 24,
        color: appTheme.gray100,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.white,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray300,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.white,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.white,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.white,
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.white,
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static const primaryColorScheme = ColorScheme.light(
    primary: Color(0XFFE593D6),
    secondary: Color(0XFF75B6F6),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // brand color
  Color get brandColor => const Color(0XFFFB37FF);
  // Black
  Color get black900 => const Color(0XFF000000);

  // BlueGray
  Color get blueGray300 => const Color(0XFF8FA0B4);
  Color get blueGray500 => const Color(0XFF747D88);

  // DeepOrange
  Color get deepOrange400 => const Color(0XFFF27A54);

  // DeepPurple
  Color get deepPurpleA200 => const Color(0XFFA154F2);

  // Gray
  Color get gray100 => const Color(0XFFF3F5F9);
  Color get gray500 => const Color(0XFF929292);
  Color get gray600 => const Color(0XFF7C7C7C);
  Color get gray800 => const Color(0XFF3F3F46);
  Color get gray900 => const Color(0XFF141414);
  Color get gray90001 => const Color(0XFF262626);
  Color get gray90002 => const Color(0XFF0A141E);
  Color get gray90003 => const Color(0XFF1C1C1C);

  // Purple
  Color get purple800 => const Color(0XFF731975);
  Color get purpleA200 => const Color(0XFFFA36FF);
  Color get purpleBgStop1 => const Color(0XFFFB37FF);
  Color get purpleBgStop2 => const Color(0XFF741976);

  // White
  Color get white => const Color(0XFFFFFFFF);

  // Yellow
  Color get yellow900 => const Color(0XFFFF8126);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
